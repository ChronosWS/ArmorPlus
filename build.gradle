buildscript {
    ext.kotlin_version = '1.1.2-5'
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
  id "com.matthewprenger.cursegradle" version "1.0.9"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: "com.matthewprenger.cursegradle"
apply plugin: 'kotlin'

repositories {
    jcenter()
    maven { // Tesla repo
        url 'http://maven.epoxide.org'
    }
    maven { // JEI repo
        name "JEI"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven { //The repo to get TiC
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven { // HWYLA repo
        url "http://tehnut.info/maven"
    }
    maven {
        name 'shadowfacts'
        url 'http://mvn.rx14.co.uk/shadowfacts/'
    }
    maven { // CraftTweaker repo
        name 'MineTweaker3'
        url "http://maven.blamejared.com"
    }
}

version = mc_version + '-' + version_major + '.' + version_minor + '.' + version_patch + '.' + version_build
group = package_group
archivesBaseName = mod_id

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    makeObfSourceJar = true
    useDepAts = true

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    manifest {
        attributes 'FMLAT': 'armorplus_at.cfg'
    }
    classifier = ''
    manifest.mainAttributes(
            "Built-By": "${author}",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Built-On": "${mc_version}-${forge_version}"
    )
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task apiJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.main.output
    include 'net/thedragonteam/armorplus/api/**/*'
    classifier = 'api'
}

task devJar(type: Jar) {
    classifier = "dev"
    from sourceSets.main.output
}


task deobfJar(type: Jar) { // Generate deobfuscated
    from sourceSets.main.output
    classifier = 'deobf'
}
tasks.build.dependsOn('deobfJar')

artifacts {
    archives deobfJar
    archives sourcesJar
    archives apiJar
    archives devJar
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

dependencies {
    deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}"
    compile "net.darkhax.tesla:Tesla:1.11-${tesla_version}"
    deobfCompile "slimeknights:TConstruct:${mc_version}-${tconstruct_version}"
    deobfCompile "slimeknights.mantle:Mantle:${mc_version}-${mantle_version}"
//    deobfCompile "mcp.mobius.waila:Waila:${hwyla_version}"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile group: "net.shadowfacts", name: "Forgelin", version: '1.4.1'
    deobfCompile "MineTweaker3:MineTweaker3-API:${minetweaker_version}"
    deobfCompile "com.blamejared:MTLib:2.0.1.9"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

curseforge {
	apiKey = project.hasProperty('api_token') ? project.api_token : '0'
	project {
	    id = '237366'
        changelog = file('src/main/resources/changelog.md')
	    changelogType = 'markdown'
        releaseType = 'beta'
        relations {
            requiredLibrary 'shadowfacts-forgelin'
            requiredLibrary 'thedragonlib'
            optionalLibrary 'crafttweaker'
            optionalLibrary 'tesla'
            optionalLibrary 'tinkers-construct'
            optionalLibrary 'baubles'
            optionalLibrary 'just-enough-items-jei'
            optionalLibrary 'the-one-probe'
        }
  }
}
